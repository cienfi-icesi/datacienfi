library(xml2)
require(pacman)
p_load(xml2,
dplyr)
# Ruta al archivo descargado
xml_doc <- read_xml("Downloads/landscan-global-2023-assets/lsglobal_2023_metadata.xml")
ns <- xml_ns(xml_doc)
df <- data.frame(
titulo = titulo,
fecha_publicacion = fecha,
organizacion = organizacion,
resumen = resumen,
proposito = proposito,
keywords = keywords,
stringsAsFactors = FALSE
)
View(xml_doc)
rm(list = ls())
rm(list = ls())
require(pacman)
p_load(rio,
tidyverse
)
base <- import("Downloads/EAM_ANONIMIZADA_2022/EAM_ANONIMIZADA_2022.csv")
TICs <- import("Downloads/Modulo de TIC/M¢dulo de TIC.csv")
EAC <- import("Downloads/BasesDatos-EAC-Nacional-2023/EAC_CIFRAS_2023_ANONIMIZADA_FINAL.csv")
EAM <- import("Downloads/EAM_ANONIMIZADA_2022/EAM_ANONIMIZADA_2022.csv")
EAS <- import("Downloads/BasesDatos-EAS-2023/EAS_2023.csv")
str(EAM)
View(EAM)
str(TICs)
View(TICs)
# Visualización rápida:
summary(TICs)
doc <- "
# ------------------------------------------------------------------------------
# Nombre del dataset: TICs
# Descripción: Base de datos proveniente de una encuesta sobre el uso de Tecnologías
# de la Información y la Comunicación (TIC) en hogares o personas. Incluye variables
# sobre acceso, uso y características sociodemográficas.
#
# Fuente: [Indicar fuente, ej. DANE - Encuesta de Calidad de Vida, año XXXX]
# Fecha de creación: [Fecha de descarga o procesamiento]
# Autor: [Tu nombre o equipo]
# Última actualización: [Fecha]
# ------------------------------------------------------------------------------
# Formato: data.frame
# Número de observaciones (filas): 81,018
# Número de variables (columnas): 35
# Observación: Cada fila representa una unidad de observación individual o del hogar.
# ------------------------------------------------------------------------------
# Variables principales:
# ------------------------------------------------------------------------------
# | Nombre           | Tipo     | Descripción                                                                 |
# |------------------|----------|-----------------------------------------------------------------------------|
# | DIRECTORIO       | int      | Identificador único del hogar o vivienda                                    |
# | SECUENCIA_P      | int      | Número secuencial de la persona en el hogar                                 |
# | SECUENCIA_ENCUESTA | int    | Número de encuesta aplicado                                                 |
# | P4001            | int      | Tiene acceso a internet (1 = Sí, 2 = No)                                    |
# | P1087, P1088     | int      | Acceso a computadora u otro dispositivo digital                             |
# | P976             | int      | Tiene celular propio (1 = Sí, 2 = No)                                       |
# | P978             | int      | Usa internet desde celular (1 = Sí, 2 = No)                                 |
# | P979             | int      | Usa internet para estudio o trabajo (1 = Sí, 2 = No)                        |
# | P994             | int      | Participa en redes sociales (1 = Sí, 2 = No)                                |
# | P2532            | int      | Utiliza algún servicio en línea del gobierno                                |
# | P1559            | int      | Nivel de educación alcanzado                                               |
# | P2524            | int      | Realizó compras por internet                                                |
# | P1093, P2528     | int      | Otras formas de uso de TICs                                                |
# | P1006_1 a P1006_13| int     | Actividades específicas realizadas con tecnologías (bancos, compras, etc.) |
# | CLASE_TE         | int      | Clase de tenencia del hogar (1 = Propio, 2 = Arrendado, etc.)              |
# | COD_DEPTO        | int      | Código del departamento                                                    |
# | AREA             | int      | Zona geográfica (1 = Cabecera, 2 = Resto)                                  |
# | F_EXP            | num      | Factor de expansión muestral                                               |
# ------------------------------------------------------------------------------
# Notas adicionales:
# - La mayoría de las variables con prefijo “P” son numéricas codificadas según el cuestionario original.
# - Las variables `P1006_1` a `P1006_13` representan respuestas múltiples (checklist) para distintas actividades.
# - Los valores `NA` indican datos faltantes, generalmente por omisión lógica en el flujo del cuestionario.
# - El factor de expansión `F_EXP` debe utilizarse para realizar estimaciones representativas.
# - Se recomienda revisar el manual técnico del instrumento original para una codificación precisa de cada ítem.
"
writeLines(doc, "documentacion_TICs.txt")
writeLines(doc, "Downloads/documentacion_TICs.txt")
require(pacman)
p_load(tidyverse,
rio)
import("https://www.datos.gov.co/resource/hrhc-c4wu.csv")
base <- import("https://www.datos.gov.co/resource/hrhc-c4wu.csv")
View(base)
base <- import("Downloads/Grupos_de_Investigaci_n_Reconocidos_20250705.csv")
View(base)
group_by(base, NME_AREA_GR)
group_by(base, NME_AREA_GR, Economía y Negocios)
group_by(base, NME_AREA_GR, "Economía y Negocios")
subase <- group_by(base, NME_AREA_GR, "Economía y Negocios")
View(subase)
base <- import("Downloads/Grupos_de_Investigaci_n_Reconocidos_20250705.csv")
subase <- group_by(base, NME_AREA_GR)
View(subase)
grupos_negocios <- filter(subase, NME_AREA_GR == "Economía y Negocios")
View(grupos_negocios)
View(base)
prueba <- group_by(grupos_negocios, NME_GRUPO_GR == "Grupo Humanismo y Gestión")
View(prueba)
prueba <- filter(grupos_negocios, NME_GRUPO_GR == "Grupo Humanismo y Gestión")
View(prueba)
produccion <- import("Downloads/Producci_n_Grupos_Investigaci_n_20250705.csv")
View(produccion)
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión")
View(produccion_grupos)
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión") %>%
View(produccion_grupos)
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión") %>%
filter(produccion, NME_CLASE_PD == "Articulo de investigación con Calidad A1")
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión") %>%
filter(produccion, NME_CATEGORIA_PD == "Articulo de investigación con Calidad A1")
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión") %>%
filter(produccion, NME_CATEGORIA_PD == "Artículos de investigación con Calidad A1")
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión" %>% NME_CATEGORIA_PD == "Artículos de investigación con Calidad A1")
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión", %>% NME_CATEGORIA_PD == "Artículos de investigación con Calidad A1")
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión" %>%
NME_CATEGORIA_PD == "Artículos de investigación con Calidad A1")
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Grupo Humanismo y Gestión")
View(produccion_grupos)
productos <- filter(produccion_grupos, NME_CATEGORIA_PD == "Artículos de investigación con Calidad A1")
productos <- filter(produccion_grupos, NME_CATEGORIA_PD == Artículos de investigación con Calidad A1)
productos <- filter(produccion_grupos, NME_CATEGORIA_PD = Artículos de investigación con Calidad A1)
productos <- filter(produccion_grupos, NME_CATEGORIA_PD == "Artículos de investigación con Calidad A2")
View(productos)
productos <- filter(produccion_grupos, ID_TIPO_PD_MED == "ART-ART_A1")
View(productos)
View(produccion)
View(grupos_negocios)
View(grupos_negocios)
prueba <- filter(grupos_negocios, NME_GRUPO_GR == "Historia y Empresariado")
View(prueba)
produccion_grupos<- filter(produccion, NME_GRUPO_GR == "Historia y Empresariado")
productos <- filter(produccion_grupos, ID_TIPO_PD_MED == "ART-ART_A1")
View(productos)
vignette(SeminR)
p_load(tidyverse,
rio,
SeminR)
require(pacman)
p_load(tidyverse,
rio,
SeminR)
install.packages("seminr")
p_load(tidyverse,
rio,
seminr)
vignette(seminr)
vignette("seminr")
vignette("SEMinR")
# Llamar los datos
data <- mobil
# Llamar los datos
data <- "mobil"
# Llamar los datos
data <- mobi
View(data)
# Especificar modelo de medida
measurements <- constructs(composite("Image", multi_items("IMAG", 1:5), weights = mode_B),
composite("Expectation", multi_items("CUEX", 1:3), weights = regression_weights),
composite("Quality", multi_items("PERQ", 1:7), weights = mode_A),
composite("Value", multi_items("PERV", 1:2), weights = correlation_weights),
reflective("Satisfaction", multi_items("CUSA", 1:3)),
reflective("Complaints", single_item("CUSCO")),
higher_composite("HOC", c("Value", "Satisfaction"), orthogonal, mode_A),
interaction_term(iv="Image", moderator = "Expectation", method = orthogonal, weights = mode_A),
reflective("Loyalty", multi_items("CUSL", 1:3))
)
View(measurements)
# Especificar modelo estructural
mobi_sm <- relationships(
paths(from = "Image", to = c("Expectation", "Statisfacion", "Loyalty")),
paths(from = "Expectation", to = c("Quality", "Value", "Satisfaction")),
paths(from = "Quality", to = c("Value", "Satisfaction")),
paths(from = "Value", to = c("Satisfaction")),
paths(from = "Satisfaction", to = c("Complaints", "Loyalty")),
paths(from = "Complaints", to = "Loyalty")
)
View(mobi_sm)
mobi_pls <- estimate_pls(
data = mobi,
measurement_model = mobi,
structural_model = mobi_sm,
inner_weights = path_weighting
)
# definir modelo de medida
mobi_mm <- constructs(
composite("Image", multi_items("IMAG", 1:5)),
composite("Expectation", multi_items("CUEX", 1:3)),
composite("Value", multi_items("PERV", 1:2)),
composite("Satisfaction", multi_items("CUSA", 1:3)),
interaction_term(iv = "Image", moderator = "Expectation"),
interaction_term(iv = "Image", moderador = "Value")
)
# definir modelo de medida
mobi_mm <- constructs(
composite("Image", multi_items("IMAG", 1:5)),
composite("Expectation", multi_items("CUEX", 1:3)),
composite("Value", multi_items("PERV", 1:2)),
composite("Satisfaction", multi_items("CUSA", 1:3)),
interaction_term(iv = "Image", moderator = "Expectation"),
interaction_term(iv = "Image", moderator = "Value")
)
# definir modelo estructural
mobi_sm <- relationships(
paths(to = "Satisfaction",
from = c("Image", "Expectation", "Value",
"Image*Expectation", "Image*Value"))
)
mobi_pls <- estimate_pls(
data = data,
measurement_model = mobi_mm,
structural_model = mobi_sm,
inner_weights = path_weighting
)
# Aplicar muestreo bootstrapping
boot_mobi_pls <- bootstrap_model(seminr_model = mobi_pls,
nboot = 1000,
cores = NULL)
View(boot_mobi_pls)
# Reportar el modelo estimado
summary(seminr_model)
# Reportar el modelo estimado
summary(mobi_pls)
# Reportar el modelo estimado
model_summary <- summary(mobi_pls)
View(model_summary)
# Reportar resultados de un PLS boostrapped
summary(boot_mobi_pls)
model_summary <- summary(mobi_pls)
model_summary$descriptives$statistics$items
model_summary$descriptives$correlations$items
model_summary$descriptives$statistics$constructs
model_summary$descriptives$correlations$constructs
# Plotting models
plot(boot_mobi_pls, title = "Modelo")
# Plotting models
plot(boot_mobi_pls, title = "Modelo")
# Plotting models
plot(boot_mobi_pls, title = "Modelo")
vignette("janitor")
vignette("merge")
vignette("joint")
vignette("tabyls")
vignette("biblioshiny")
vignette("bibliometrix")
p_load(tidyverse,
rio,
seminr,
bibliometrix)
vignette("bibliometrix")
vignette("bibliometrix")
#1. Cargar herramientas de desarrollo
install.packages(c("devtools", "roxygen2", "testthat"))
library(devtools)
#2. Cargar el paquete localmente (sin instalar)
devtools::load_all("datacienfi")
